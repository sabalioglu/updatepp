{
  "name": "Platform-Based Audio Transcription Workflow",
  "description": "Routes audio transcription to appropriate service based on platform (iOS → Whisper, Android → Gemini)",
  "version": "1.0.0",
  "nodes": [
    {
      "id": "receive-audio-input",
      "type": "input",
      "name": "Receive Audio Input",
      "description": "Takes audio file URI and platform as input",
      "inputs": {
        "audioUri": {
          "type": "string",
          "required": true,
          "description": "Full URI of the audio file (e.g. file:///data/user/0/app/audio.mp4)"
        },
        "platform": {
          "type": "string",
          "required": true,
          "enum": ["ios", "android"],
          "description": "Platform indicator (ios or android)"
        }
      },
      "outputs": {
        "audioUri": "string",
        "platform": "string"
      }
    },
    {
      "id": "check-platform",
      "type": "conditional",
      "name": "Check Platform",
      "description": "Routes to appropriate transcription service based on platform",
      "condition": {
        "field": "platform",
        "operator": "equals",
        "value": "ios"
      },
      "trueBranch": "whisper-transcription",
      "falseBranch": "gemini-transcription"
    },
    {
      "id": "whisper-transcription",
      "type": "http-request",
      "name": "Whisper Transcription",
      "description": "OpenAI Whisper transcription for iOS platform",
      "method": "POST",
      "url": "https://api.openai.com/v1/audio/transcriptions",
      "headers": {
        "Authorization": "Bearer {{OPENAI_API_KEY}}",
        "Content-Type": "multipart/form-data"
      },
      "body": {
        "type": "form-data",
        "fields": {
          "file": {
            "type": "file",
            "source": "{{audioUri}}",
            "mimeType": "audio/m4a"
          },
          "model": "whisper-1",
          "response_format": "json",
          "language": "en"
        }
      },
      "errorHandling": {
        "retries": 2,
        "fallbackMessage": "Whisper transcription failed. Please try again."
      }
    },
    {
      "id": "gemini-transcription",
      "type": "http-request",
      "name": "Gemini Transcription",
      "description": "Google Gemini transcription for Android platform",
      "method": "POST",
      "url": "{{GEMINI_API_ENDPOINT}}/api/transcribe",
      "headers": {
        "Authorization": "Bearer {{GEMINI_API_KEY}}",
        "Content-Type": "application/json"
      },
      "body": {
        "type": "json",
        "data": {
          "fileUri": "{{audioUri}}",
          "platform": "android",
          "options": {
            "language": "en",
            "format": "text"
          }
        }
      },
      "errorHandling": {
        "retries": 2,
        "fallbackMessage": "Gemini transcription failed. Please try again."
      }
    },
    {
      "id": "normalize-response",
      "type": "transform",
      "name": "Normalize Response",
      "description": "Merges and normalizes responses from both transcription services",
      "script": {
        "language": "javascript",
        "code": `
          // Normalize response from either Whisper or Gemini
          function normalizeTranscriptionResponse(response, platform) {
            let transcription = '';
            
            // Handle Whisper response format
            if (response.text) {
              transcription = response.text;
            }
            // Handle Gemini response format
            else if (response.transcription) {
              transcription = response.transcription;
            }
            // Handle alternative response formats
            else if (response.result) {
              transcription = response.result;
            }
            
            // Fallback if no transcription found
            if (!transcription || transcription.trim() === '') {
              transcription = 'No transcription available';
            }
            
            return {
              transcription: transcription.trim(),
              platform: platform,
              service: platform === 'ios' ? 'OpenAI Whisper' : 'Google Gemini',
              timestamp: new Date().toISOString(),
              success: transcription !== 'No transcription available'
            };
          }
          
          return normalizeTranscriptionResponse(response, platform);
        `
      }
    },
    {
      "id": "show-transcription",
      "type": "output",
      "name": "Show Transcription",
      "description": "Displays the final transcription result",
      "template": {
        "message": "Transcription completed successfully",
        "platform": "{{platform}}",
        "service": "{{service}}",
        "text": "{{transcription}}",
        "timestamp": "{{timestamp}}",
        "success": "{{success}}"
      },
      "errorTemplate": {
        "message": "Transcription failed. Please try again.",
        "platform": "{{platform}}",
        "error": "{{error}}",
        "timestamp": "{{timestamp}}",
        "success": false
      }
    }
  ],
  "connections": [
    {
      "from": "receive-audio-input",
      "to": "check-platform"
    },
    {
      "from": "check-platform",
      "to": "whisper-transcription",
      "condition": "true"
    },
    {
      "from": "check-platform",
      "to": "gemini-transcription",
      "condition": "false"
    },
    {
      "from": "whisper-transcription",
      "to": "normalize-response"
    },
    {
      "from": "gemini-transcription",
      "to": "normalize-response"
    },
    {
      "from": "normalize-response",
      "to": "show-transcription"
    }
  ],
  "environment": {
    "required_variables": [
      "OPENAI_API_KEY",
      "GEMINI_API_KEY",
      "GEMINI_API_ENDPOINT"
    ]
  },
  "metadata": {
    "created": "2025-01-08",
    "author": "Pantry Pal Development Team",
    "tags": ["audio", "transcription", "ios", "android", "whisper", "gemini"],
    "use_cases": [
      "Voice note transcription",
      "Audio-to-text conversion",
      "Platform-specific API routing",
      "Multi-service fallback handling"
    ]
  }
}